// Mocks generated by Mockito 5.0.15 from annotations
// in my_grocery_list/test/helpers/test_helpers.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;
import 'dart:ui' as _i7;

import 'package:firebase_auth/firebase_auth.dart' as _i2;
import 'package:flutter/material.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:my_grocery_list/services/total_price_service.dart' as _i8;
import 'package:stacked_firebase_auth/src/firebase_authentication_service.dart'
    as _i3;
import 'package:stacked_services/stacked_services.dart' as _i4;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeFirebaseAuth_0 extends _i1.Fake implements _i2.FirebaseAuth {}

class _FakeFirebaseAuthenticationResult_1 extends _i1.Fake
    implements _i3.FirebaseAuthenticationResult {}

/// A class which mocks [NavigationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigationService extends _i1.Mock implements _i4.NavigationService {
  @override
  String get previousRoute =>
      (super.noSuchMethod(Invocation.getter(#previousRoute), returnValue: '')
          as String);
  @override
  String get currentRoute =>
      (super.noSuchMethod(Invocation.getter(#currentRoute), returnValue: '')
          as String);
  @override
  _i5.GlobalKey<_i5.NavigatorState>? nestedNavigationKey(int? index) =>
      (super.noSuchMethod(Invocation.method(#nestedNavigationKey, [index]))
          as _i5.GlobalKey<_i5.NavigatorState>?);
  @override
  void config(
          {bool? enableLog,
          bool? defaultPopGesture,
          bool? defaultOpaqueRoute,
          Duration? defaultDurationTransition,
          bool? defaultGlobalState,
          String? defaultTransition}) =>
      super.noSuchMethod(
          Invocation.method(#config, [], {
            #enableLog: enableLog,
            #defaultPopGesture: defaultPopGesture,
            #defaultOpaqueRoute: defaultOpaqueRoute,
            #defaultDurationTransition: defaultDurationTransition,
            #defaultGlobalState: defaultGlobalState,
            #defaultTransition: defaultTransition
          }),
          returnValueForMissingStub: null);
  @override
  _i6.Future<T?>? navigateWithTransition<T>(_i5.Widget? page,
          {bool? opaque,
          String? transition = r'',
          Duration? duration,
          bool? popGesture,
          int? id,
          _i5.Curve? curve,
          _i4.Bindings? binding,
          bool? fullscreenDialog = false,
          bool? preventDuplicates = true,
          _i4.Transition? transitionClass}) =>
      (super.noSuchMethod(Invocation.method(#navigateWithTransition, [
        page
      ], {
        #opaque: opaque,
        #transition: transition,
        #duration: duration,
        #popGesture: popGesture,
        #id: id,
        #curve: curve,
        #binding: binding,
        #fullscreenDialog: fullscreenDialog,
        #preventDuplicates: preventDuplicates,
        #transitionClass: transitionClass
      })) as _i6.Future<T?>?);
  @override
  _i6.Future<T?>? replaceWithTransition<T>(_i5.Widget? page,
          {bool? opaque,
          String? transition = r'',
          Duration? duration,
          bool? popGesture,
          int? id,
          _i5.Curve? curve,
          _i4.Bindings? binding,
          bool? fullscreenDialog = false,
          bool? preventDuplicates = true,
          _i4.Transition? transitionClass}) =>
      (super.noSuchMethod(Invocation.method(#replaceWithTransition, [
        page
      ], {
        #opaque: opaque,
        #transition: transition,
        #duration: duration,
        #popGesture: popGesture,
        #id: id,
        #curve: curve,
        #binding: binding,
        #fullscreenDialog: fullscreenDialog,
        #preventDuplicates: preventDuplicates,
        #transitionClass: transitionClass
      })) as _i6.Future<T?>?);
  @override
  bool back<T>({T? result, int? id}) => (super.noSuchMethod(
      Invocation.method(#back, [], {#result: result, #id: id}),
      returnValue: false) as bool);
  @override
  void popUntil(_i5.RoutePredicate? predicate) =>
      super.noSuchMethod(Invocation.method(#popUntil, [predicate]),
          returnValueForMissingStub: null);
  @override
  void popRepeated(int? popTimes) =>
      super.noSuchMethod(Invocation.method(#popRepeated, [popTimes]),
          returnValueForMissingStub: null);
  @override
  _i6.Future<T?>? navigateTo<T>(String? routeName,
          {dynamic arguments,
          int? id,
          bool? preventDuplicates = true,
          Map<String, String>? parameters}) =>
      (super.noSuchMethod(Invocation.method(#navigateTo, [
        routeName
      ], {
        #arguments: arguments,
        #id: id,
        #preventDuplicates: preventDuplicates,
        #parameters: parameters
      })) as _i6.Future<T?>?);
  @override
  _i6.Future<T?>? navigateToView<T>(_i5.Widget? view,
          {dynamic arguments,
          int? id,
          bool? opaque,
          _i5.Curve? curve,
          _i4.Bindings? binding,
          Duration? duration,
          bool? fullscreenDialog = false,
          bool? popGesture,
          bool? preventDuplicates = true,
          _i4.Transition? transition}) =>
      (super.noSuchMethod(Invocation.method(#navigateToView, [
        view
      ], {
        #arguments: arguments,
        #id: id,
        #opaque: opaque,
        #curve: curve,
        #binding: binding,
        #duration: duration,
        #fullscreenDialog: fullscreenDialog,
        #popGesture: popGesture,
        #preventDuplicates: preventDuplicates,
        #transition: transition
      })) as _i6.Future<T?>?);
  @override
  _i6.Future<T?>? replaceWith<T>(String? routeName,
          {dynamic arguments,
          int? id,
          bool? preventDuplicates = true,
          Map<String, String>? parameters}) =>
      (super.noSuchMethod(Invocation.method(#replaceWith, [
        routeName
      ], {
        #arguments: arguments,
        #id: id,
        #preventDuplicates: preventDuplicates,
        #parameters: parameters
      })) as _i6.Future<T?>?);
  @override
  _i6.Future<T?>? clearStackAndShow<T>(String? routeName,
          {dynamic arguments, int? id, Map<String, String>? parameters}) =>
      (super.noSuchMethod(Invocation.method(#clearStackAndShow, [
        routeName
      ], {
        #arguments: arguments,
        #id: id,
        #parameters: parameters
      })) as _i6.Future<T?>?);
  @override
  _i6.Future<T?>? clearTillFirstAndShow<T>(String? routeName,
          {dynamic arguments,
          int? id,
          bool? preventDuplicates = true,
          Map<String, String>? parameters}) =>
      (super.noSuchMethod(Invocation.method(#clearTillFirstAndShow, [
        routeName
      ], {
        #arguments: arguments,
        #id: id,
        #preventDuplicates: preventDuplicates,
        #parameters: parameters
      })) as _i6.Future<T?>?);
  @override
  _i6.Future<T?>? clearTillFirstAndShowView<T>(_i5.Widget? view,
          {dynamic arguments, int? id}) =>
      (super.noSuchMethod(Invocation.method(#clearTillFirstAndShowView, [view],
          {#arguments: arguments, #id: id})) as _i6.Future<T?>?);
  @override
  _i6.Future<T?>? pushNamedAndRemoveUntil<T>(String? routeName,
          {_i5.RoutePredicate? predicate, dynamic arguments, int? id}) =>
      (super.noSuchMethod(Invocation.method(#pushNamedAndRemoveUntil, [
        routeName
      ], {
        #predicate: predicate,
        #arguments: arguments,
        #id: id
      })) as _i6.Future<T?>?);
  @override
  String toString() => super.toString();
}

/// A class which mocks [DialogService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDialogService extends _i1.Mock implements _i4.DialogService {
  @override
  void registerCustomDialogBuilders(
          Map<dynamic, _i4.DialogBuilder>? builders) =>
      super.noSuchMethod(
          Invocation.method(#registerCustomDialogBuilders, [builders]),
          returnValueForMissingStub: null);
  @override
  void registerCustomDialogBuilder(
          {dynamic variant,
          _i5.Widget Function(_i5.BuildContext, _i4.DialogRequest<dynamic>,
                  dynamic Function(_i4.DialogResponse<dynamic>))?
              builder}) =>
      super.noSuchMethod(
          Invocation.method(#registerCustomDialogBuilder, [],
              {#variant: variant, #builder: builder}),
          returnValueForMissingStub: null);
  @override
  _i6.Future<_i4.DialogResponse<dynamic>?> showDialog(
          {String? title,
          String? description,
          String? cancelTitle,
          _i7.Color? cancelTitleColor,
          String? buttonTitle = r'Ok',
          _i7.Color? buttonTitleColor,
          bool? barrierDismissible = false,
          _i4.DialogPlatform? dialogPlatform}) =>
      (super.noSuchMethod(
              Invocation.method(#showDialog, [], {
                #title: title,
                #description: description,
                #cancelTitle: cancelTitle,
                #cancelTitleColor: cancelTitleColor,
                #buttonTitle: buttonTitle,
                #buttonTitleColor: buttonTitleColor,
                #barrierDismissible: barrierDismissible,
                #dialogPlatform: dialogPlatform
              }),
              returnValue: Future<_i4.DialogResponse<dynamic>?>.value())
          as _i6.Future<_i4.DialogResponse<dynamic>?>);
  @override
  _i6.Future<_i4.DialogResponse<T>?> showCustomDialog<T, R>(
          {dynamic variant,
          String? title,
          String? description,
          bool? hasImage = false,
          String? imageUrl,
          bool? showIconInMainButton = false,
          String? mainButtonTitle,
          bool? showIconInSecondaryButton = false,
          String? secondaryButtonTitle,
          bool? showIconInAdditionalButton = false,
          String? additionalButtonTitle,
          bool? takesInput = false,
          _i7.Color? barrierColor = const _i7.Color(2315255808),
          bool? barrierDismissible = false,
          String? barrierLabel = r'',
          dynamic customData,
          R? data}) =>
      (super.noSuchMethod(
              Invocation.method(#showCustomDialog, [], {
                #variant: variant,
                #title: title,
                #description: description,
                #hasImage: hasImage,
                #imageUrl: imageUrl,
                #showIconInMainButton: showIconInMainButton,
                #mainButtonTitle: mainButtonTitle,
                #showIconInSecondaryButton: showIconInSecondaryButton,
                #secondaryButtonTitle: secondaryButtonTitle,
                #showIconInAdditionalButton: showIconInAdditionalButton,
                #additionalButtonTitle: additionalButtonTitle,
                #takesInput: takesInput,
                #barrierColor: barrierColor,
                #barrierDismissible: barrierDismissible,
                #barrierLabel: barrierLabel,
                #customData: customData,
                #data: data
              }),
              returnValue: Future<_i4.DialogResponse<T>?>.value())
          as _i6.Future<_i4.DialogResponse<T>?>);
  @override
  _i6.Future<_i4.DialogResponse<dynamic>?> showConfirmationDialog(
          {String? title,
          String? description,
          String? cancelTitle = r'Cancel',
          String? confirmationTitle = r'Ok',
          bool? barrierDismissible = false,
          _i4.DialogPlatform? dialogPlatform}) =>
      (super.noSuchMethod(
              Invocation.method(#showConfirmationDialog, [], {
                #title: title,
                #description: description,
                #cancelTitle: cancelTitle,
                #confirmationTitle: confirmationTitle,
                #barrierDismissible: barrierDismissible,
                #dialogPlatform: dialogPlatform
              }),
              returnValue: Future<_i4.DialogResponse<dynamic>?>.value())
          as _i6.Future<_i4.DialogResponse<dynamic>?>);
  @override
  void completeDialog(_i4.DialogResponse<dynamic>? response) =>
      super.noSuchMethod(Invocation.method(#completeDialog, [response]),
          returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}

/// A class which mocks [TotalPriceService].
///
/// See the documentation for Mockito's code generation for more information.
class MockTotalPriceService extends _i1.Mock implements _i8.TotalPriceService {
  @override
  num get count =>
      (super.noSuchMethod(Invocation.getter(#count), returnValue: 0) as num);
  @override
  void initItemPriceCount() =>
      super.noSuchMethod(Invocation.method(#initItemPriceCount, []),
          returnValueForMissingStub: null);
  @override
  _i6.Future<dynamic> addItemPrice({String? itemName, num? price}) =>
      (super.noSuchMethod(
          Invocation.method(
              #addItemPrice, [], {#itemName: itemName, #price: price}),
          returnValue: Future<dynamic>.value()) as _i6.Future<dynamic>);
  @override
  _i6.Future<dynamic> removeItemPrice({String? itemName}) =>
      (super.noSuchMethod(
          Invocation.method(#removeItemPrice, [], {#itemName: itemName}),
          returnValue: Future<dynamic>.value()) as _i6.Future<dynamic>);
  @override
  _i6.Future<dynamic> reset() =>
      (super.noSuchMethod(Invocation.method(#reset, []),
          returnValue: Future<dynamic>.value()) as _i6.Future<dynamic>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [FirebaseAuthenticationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuthenticationService extends _i1.Mock
    implements _i3.FirebaseAuthenticationService {
  @override
  _i2.FirebaseAuth get firebaseAuth =>
      (super.noSuchMethod(Invocation.getter(#firebaseAuth),
          returnValue: _FakeFirebaseAuth_0()) as _i2.FirebaseAuth);
  @override
  bool get hasUser =>
      (super.noSuchMethod(Invocation.getter(#hasUser), returnValue: false)
          as bool);
  @override
  _i6.Stream<_i2.User?> get authStateChanges =>
      (super.noSuchMethod(Invocation.getter(#authStateChanges),
          returnValue: Stream<_i2.User?>.empty()) as _i6.Stream<_i2.User?>);
  @override
  _i6.Future<bool> emailExists(String? email) =>
      (super.noSuchMethod(Invocation.method(#emailExists, [email]),
          returnValue: Future<bool>.value(false)) as _i6.Future<bool>);
  @override
  _i6.Future<_i3.FirebaseAuthenticationResult> signInWithGoogle() =>
      (super.noSuchMethod(Invocation.method(#signInWithGoogle, []),
              returnValue: Future<_i3.FirebaseAuthenticationResult>.value(
                  _FakeFirebaseAuthenticationResult_1()))
          as _i6.Future<_i3.FirebaseAuthenticationResult>);
  @override
  _i6.Future<bool> isAppleSignInAvailable() =>
      (super.noSuchMethod(Invocation.method(#isAppleSignInAvailable, []),
          returnValue: Future<bool>.value(false)) as _i6.Future<bool>);
  @override
  _i6.Future<_i3.FirebaseAuthenticationResult> signInWithApple(
          {String? appleRedirectUri, String? appleClientId}) =>
      (super.noSuchMethod(
              Invocation.method(#signInWithApple, [], {
                #appleRedirectUri: appleRedirectUri,
                #appleClientId: appleClientId
              }),
              returnValue: Future<_i3.FirebaseAuthenticationResult>.value(
                  _FakeFirebaseAuthenticationResult_1()))
          as _i6.Future<_i3.FirebaseAuthenticationResult>);
  @override
  _i6.Future<_i3.FirebaseAuthenticationResult> loginAnonymously() =>
      (super.noSuchMethod(Invocation.method(#loginAnonymously, []),
              returnValue: Future<_i3.FirebaseAuthenticationResult>.value(
                  _FakeFirebaseAuthenticationResult_1()))
          as _i6.Future<_i3.FirebaseAuthenticationResult>);
  @override
  _i6.Future<_i3.FirebaseAuthenticationResult> loginWithEmail(
          {String? email, String? password}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #loginWithEmail, [], {#email: email, #password: password}),
              returnValue: Future<_i3.FirebaseAuthenticationResult>.value(
                  _FakeFirebaseAuthenticationResult_1()))
          as _i6.Future<_i3.FirebaseAuthenticationResult>);
  @override
  _i6.Future<_i3.FirebaseAuthenticationResult> createAccountWithEmail(
          {String? email, String? password}) =>
      (super.noSuchMethod(
              Invocation.method(#createAccountWithEmail, [],
                  {#email: email, #password: password}),
              returnValue: Future<_i3.FirebaseAuthenticationResult>.value(
                  _FakeFirebaseAuthenticationResult_1()))
          as _i6.Future<_i3.FirebaseAuthenticationResult>);
  @override
  _i6.Future<dynamic> logout() =>
      (super.noSuchMethod(Invocation.method(#logout, []),
          returnValue: Future<dynamic>.value()) as _i6.Future<dynamic>);
  @override
  _i6.Future<dynamic> sendResetPasswordLink(String? email) =>
      (super.noSuchMethod(Invocation.method(#sendResetPasswordLink, [email]),
          returnValue: Future<dynamic>.value()) as _i6.Future<dynamic>);
  @override
  _i6.Future<dynamic> validatePassword(String? password) =>
      (super.noSuchMethod(Invocation.method(#validatePassword, [password]),
          returnValue: Future<dynamic>.value()) as _i6.Future<dynamic>);
  @override
  _i6.Future<dynamic> updatePassword(String? password) =>
      (super.noSuchMethod(Invocation.method(#updatePassword, [password]),
          returnValue: Future<dynamic>.value()) as _i6.Future<dynamic>);
  @override
  _i6.Future<dynamic> updateEmail(String? email) =>
      (super.noSuchMethod(Invocation.method(#updateEmail, [email]),
          returnValue: Future<dynamic>.value()) as _i6.Future<dynamic>);
  @override
  String generateNonce([int? length = 32]) =>
      (super.noSuchMethod(Invocation.method(#generateNonce, [length]),
          returnValue: '') as String);
  @override
  String sha256ofString(String? input) =>
      (super.noSuchMethod(Invocation.method(#sha256ofString, [input]),
          returnValue: '') as String);
  @override
  String toString() => super.toString();
}
